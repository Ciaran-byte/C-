//程序功能：非完整程序，单纯说明缺省值的写法。
void f1(int a, int b, int c)
{

}
void f2(int a, int b=1, int c=2)
{

}
void f3(int a, int b=2, int c)  //不合规则的写法
{

}
void f4(int a=1, int b=2, int c=3)
{

}

//注解1：对于函数，我们可以设定缺省值，这样的话在数据不全的情况下，也是不影响系统程序运行的。缺省值只能写在头文件的函数定义里面，不能写在cpp文件里面
//注解2：省缺值必须从右边开始连续写，像f3那种最右边的被空了是不被允许的，具体原因如下：
//假设函数引用f(1,2,3)是正常的引用写法，而f(1)和f（1,2）是省略的写法，这种省略写法填入数据自然是从左向右进行填入的，如果最右边的被省略，这种写法就会缺少变量数据
//像f2（1,2)是可以的，所有数据都有定义，而f3（1,2）就不行，因为最右边的那个数据没有定义。所以，c++设计了缺省值规则，缺省值必须从右边开始写。
//注释3：尽量不要试用缺省值，不安全。



